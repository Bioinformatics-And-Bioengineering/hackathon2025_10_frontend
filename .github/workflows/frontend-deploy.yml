name: Deploy Frontend (Vite) to EC2
on:
  push:
    branches: [ "main" ] 
    paths: 
      - "my-app/**"
      - ".github/workflows/frontend-deploy.yml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-app 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies & Build (Vite)
        # ビルドが成功しない場合は、ここで強制的に停止させる
        run: |
          echo "--- Installing dependencies ---"
          npm ci 
          
          echo "--- Running Vite build ---"
          npm run build 

          # 【追加】ビルド後のディレクトリ存在確認
          if [ ! -d "dist" ]; then
            echo "🚨 エラー: 'dist' ディレクトリが見つかりませんでした。"
            echo "Viteの設定 (vite.config.js) で出力パスが 'dist' であるか確認してください。"
            exit 1
          fi
          
          echo "✅ ビルド成果物 (dist/) が確認されました。"


      # --- ステップ 1: distを一時ディレクトリへ転送 (scp-action) ---
      - name: Upload dist to EC2 (tmp)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.FE_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          # working-directory: ./my-app の中の 'dist' を指定
          source: "dist" 
          target: "/home/${{ secrets.SSH_USER }}/" 

      # --- ステップ 2: サーバー側で配置（ssh-action） ---
      - name: Publish on server (atomic swap)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.FE_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            
            SRC_DIR="/home/${{ secrets.SSH_USER }}/dist" 
            TARGET_DIR="${{ secrets.FE_PATH }}"
            
            # デプロイロジック
            sudo mkdir -p "$TARGET_DIR"
            rsync -av --delete "$SRC_DIR"/ "$TARGET_DIR"/
            
            # 権限調整
            sudo chown -R nginx:nginx "$TARGET_DIR" || true
            sudo find "$TARGET_DIR" -type d -exec chmod 755 {} \;
            sudo find "$TARGET_DIR" -type f -exec chmod 644 {} \;
            
            rm -rf "$SRC_DIR"
            sudo systemctl reload nginx || true
